// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/liatrio/rode/pkg/attester (interfaces: Lister)

// Package attester_mock is a generated GoMock package.
package attester_mock

import (
	gomock "github.com/golang/mock/gomock"
	attester "github.com/liatrio/rode/pkg/attester"
	reflect "reflect"
)

// MockLister is a mock of Lister interface
type MockLister struct {
	ctrl     *gomock.Controller
	recorder *MockListerMockRecorder
}

// MockListerMockRecorder is the mock recorder for MockLister
type MockListerMockRecorder struct {
	mock *MockLister
}

// NewMockLister creates a new mock instance
func NewMockLister(ctrl *gomock.Controller) *MockLister {
	mock := &MockLister{ctrl: ctrl}
	mock.recorder = &MockListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLister) EXPECT() *MockListerMockRecorder {
	return m.recorder
}

// ListAttesters mocks base method
func (m *MockLister) ListAttesters() map[string]attester.Attester {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAttesters")
	ret0, _ := ret[0].(map[string]attester.Attester)
	return ret0
}

// ListAttesters indicates an expected call of ListAttesters
func (mr *MockListerMockRecorder) ListAttesters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAttesters", reflect.TypeOf((*MockLister)(nil).ListAttesters))
}
